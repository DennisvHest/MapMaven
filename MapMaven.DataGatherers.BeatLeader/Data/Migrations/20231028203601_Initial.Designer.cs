// <auto-generated />
using System;
using MapMaven.DataGatherers.BeatLeader.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MapMaven.DataGatherers.BeatLeader.Data.Migrations
{
    [DbContext(typeof(BeatLeaderScoresContext))]
    [Migration("20231028203601_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MapMaven.DataGatherers.BeatLeader.PlayerResponseWithStats", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("AccPp")
                        .HasColumnType("real");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Bot")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryRank")
                        .HasColumnType("int");

                    b.Property<int>("LastWeekCountryRank")
                        .HasColumnType("int");

                    b.Property<float>("LastWeekPp")
                        .HasColumnType("real");

                    b.Property<int>("LastWeekRank")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PassPp")
                        .HasColumnType("real");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Pp")
                        .HasColumnType("real");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScoreStatsId")
                        .HasColumnType("int");

                    b.Property<float>("TechPp")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ScoreStatsId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("MapMaven.DataGatherers.BeatLeader.PlayerScoreStats", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("APlays")
                        .HasColumnType("int");

                    b.Property<int>("AnonimusReplayWatched")
                        .HasColumnType("int");

                    b.Property<int>("AuthorizedReplayWatched")
                        .HasColumnType("int");

                    b.Property<float>("AverageAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("AverageLeftTiming")
                        .HasColumnType("real");

                    b.Property<float>("AverageRank")
                        .HasColumnType("real");

                    b.Property<float>("AverageRankedAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("AverageRankedRank")
                        .HasColumnType("real");

                    b.Property<float>("AverageRightTiming")
                        .HasColumnType("real");

                    b.Property<float>("AverageUnrankedAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("AverageUnrankedRank")
                        .HasColumnType("real");

                    b.Property<float>("AverageWeightedRankedAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("AverageWeightedRankedRank")
                        .HasColumnType("real");

                    b.Property<int>("DailyImprovements")
                        .HasColumnType("int");

                    b.Property<int>("LastRankedScoreTime")
                        .HasColumnType("int");

                    b.Property<int>("LastScoreTime")
                        .HasColumnType("int");

                    b.Property<int>("LastUnrankedScoreTime")
                        .HasColumnType("int");

                    b.Property<int>("MaxStreak")
                        .HasColumnType("int");

                    b.Property<float>("MedianAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("MedianRankedAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("PeakRank")
                        .HasColumnType("real");

                    b.Property<int>("RankedImprovementsCount")
                        .HasColumnType("int");

                    b.Property<int>("RankedMaxStreak")
                        .HasColumnType("int");

                    b.Property<int>("RankedPlayCount")
                        .HasColumnType("int");

                    b.Property<int>("RankedTop1Count")
                        .HasColumnType("int");

                    b.Property<int>("RankedTop1Score")
                        .HasColumnType("int");

                    b.Property<int>("SPlays")
                        .HasColumnType("int");

                    b.Property<int>("SpPlays")
                        .HasColumnType("int");

                    b.Property<int>("SsPlays")
                        .HasColumnType("int");

                    b.Property<int>("SspPlays")
                        .HasColumnType("int");

                    b.Property<int>("Top1Count")
                        .HasColumnType("int");

                    b.Property<int>("Top1Score")
                        .HasColumnType("int");

                    b.Property<float>("TopAccPP")
                        .HasColumnType("real");

                    b.Property<float>("TopAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("TopBonusPP")
                        .HasColumnType("real");

                    b.Property<int>("TopHMD")
                        .HasColumnType("int");

                    b.Property<float>("TopPassPP")
                        .HasColumnType("real");

                    b.Property<string>("TopPlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TopPp")
                        .HasColumnType("real");

                    b.Property<float>("TopRankedAccuracy")
                        .HasColumnType("real");

                    b.Property<float>("TopTechPP")
                        .HasColumnType("real");

                    b.Property<float>("TopUnrankedAccuracy")
                        .HasColumnType("real");

                    b.Property<int>("TotalImprovementsCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlayCount")
                        .HasColumnType("int");

                    b.Property<long>("TotalRankedScore")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalScore")
                        .HasColumnType("bigint");

                    b.Property<long>("TotalUnrankedScore")
                        .HasColumnType("bigint");

                    b.Property<int>("UnrankedImprovementsCount")
                        .HasColumnType("int");

                    b.Property<int>("UnrankedMaxStreak")
                        .HasColumnType("int");

                    b.Property<int>("UnrankedPlayCount")
                        .HasColumnType("int");

                    b.Property<int>("UnrankedTop1Count")
                        .HasColumnType("int");

                    b.Property<int>("UnrankedTop1Score")
                        .HasColumnType("int");

                    b.Property<int>("WatchedReplays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerScoreStats", (string)null);
                });

            modelBuilder.Entity("MapMaven.DataGatherers.BeatLeader.PlayerResponseWithStats", b =>
                {
                    b.HasOne("MapMaven.DataGatherers.BeatLeader.PlayerScoreStats", "ScoreStats")
                        .WithMany()
                        .HasForeignKey("ScoreStatsId");

                    b.Navigation("ScoreStats");
                });
#pragma warning restore 612, 618
        }
    }
}
