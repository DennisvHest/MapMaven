@using MapMaven.Core.Models.DynamicPlaylists;
@using MapMaven.Extensions;
@using MapMaven.Components.Playlists;

@if (SelectedPlaylist == null)
{
    <MudDialog>
        <DialogContent>
            <div id="preset-dynamic-playlists">
                @foreach (var playlist in PresetDynamicPlaylists)
                {
                    <MudButton OnClick="() => ConfigureDynamicPlaylist(playlist)" Variant="Variant.Filled">
                        <div class="d-flex flex-column align-center justify-center dynamic-playlist-add">
                            <MudIcon Icon="@Icons.Filled.AccessTime" Size="Size.Large" Class="mb-2"></MudIcon> @playlist.Name
                        </div>
                    </MudButton>
                }
            </div>
            <div id="custom-dynamic-playlist" class="pa-4 mt-4 border-t d-flex flex-column flex-center">
                <MudButton OnClick="ConfigureCustomDynamicPlaylist" Variant="Variant.Filled">
                    <div class="d-flex flex-column align-center justify-center dynamic-playlist-add">
                        <MudIcon Icon="@Icons.Filled.Settings" Size="Size.Large" Class="mb-2"></MudIcon> Custom
                    </div>
                </MudButton>
            </div>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
        </DialogActions>
    </MudDialog>
}
else
{
    var configuration = SelectedPlaylist.DynamicPlaylistConfiguration;

    <EditForm Model="@SelectedPlaylist" OnValidSubmit="OnValidSubmit">
        <ObjectGraphDataAnnotationsValidator />
        <MudDialog>
            <DialogContent>
                <PlaylistEditor EditPlaylistModel="SelectedPlaylist"></PlaylistEditor>
                <MudPaper Class="my-4" Style="background-color: var(--mud-palette-drawer-background);">
                    <MudList>
                        <MudListItem Class="py-0">
                            <div class="d-flex flex-row align-center justify-space-between">
                                <b class="mud-list-subheader pa-0">Map pool</b>
                                <MudButtonGroup OverrideStyles="false">
                                    <MudButton Variant="Variant.Filled"
                                               Color="@(configuration.MapPool == MapPool.Standard ? Color.Primary : Color.Default)"
                                               OnClick="() => ChangeMapPool(MapPool.Standard)">
                                        Downloaded maps
                                    </MudButton>
                                    <MudButton Variant="Variant.Filled"
                                               Color="@(configuration.MapPool == MapPool.Improvement ? Color.Primary : Color.Default)"
                                               OnClick="() => ChangeMapPool(MapPool.Improvement)">
                                        Improvement maps
                                    </MudButton>
                                </MudButtonGroup>
                            </div>
                        </MudListItem>
                    </MudList>
                </MudPaper>
                <MudPaper Class="my-4" Style="background-color: var(--mud-palette-drawer-background);">
                    <MudList>
                        <MudListSubheader Class="d-flex align-center justify-space-between">
                            Filters
                            <MudIconButton Icon="@Icons.Filled.Add" Variant="Variant.Outlined" Size="Size.Small" OnClick="AddFilterOperation" />
                        </MudListSubheader>
                        @foreach (var filterOperation in configuration.FilterOperations)
                        {
                            <MudListItem Class="py-0">
                                <FilterOperationInput FilterOperation="filterOperation" MapPool="configuration.MapPool" OnRemove="() => RemoveFilterOperation(filterOperation)"></FilterOperationInput>
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>

                <MudPaper Class="my-4" Style="background-color: var(--mud-palette-drawer-background);">
                    <MudList>
                        <MudListSubheader Class="d-flex align-center justify-space-between">
                            Sorting
                            <MudIconButton Icon="@Icons.Filled.Add" Variant="Variant.Outlined" Size="Size.Small" OnClick="AddSortOperation" />
                        </MudListSubheader>
                        @for (var i = 0; i < configuration.SortOperations.Count; i++)
                        {
                            var index = i;
                            var sortOperation = configuration.SortOperations[index];

                            <MudListItem Class="py-0">
                                <SortOperationInput SortOperation="sortOperation" MapPool="configuration.MapPool" OnRemove="() => RemoveSortOperation(sortOperation)" FirstSortOperation="index == 0"></SortOperationInput>
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
                <MudNumericField @bind-Value="SelectedPlaylist.DynamicPlaylistConfiguration.MapCount"
                                 For="() => SelectedPlaylist.DynamicPlaylistConfiguration.MapCount"
                                 Label="Map count"
                                 Variant="Variant.Outlined"
                                 Min="1"
                                 Class="my-4" />
            </DialogContent>
            <DialogActions>
                <MudButton OnClick="CancelConfiguration">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Submit">@(NewPlaylist ? "Add" : "Save changes")</MudButton>
            </DialogActions>
        </MudDialog>
    </EditForm>
}