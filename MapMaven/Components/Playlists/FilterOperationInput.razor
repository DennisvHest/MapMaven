@using MapMaven.Core.Models.DynamicPlaylists;
@using MapMaven.Core.Models.DynamicPlaylists.MapInfo;
@using MapMaven.Core.Utilities;

<div class="d-flex align-items-center">
    <MudSelect T="DynamicPlaylistFieldOption" Value="SelectedFieldOption" ToStringFunc="field => field?.Name" Label="Field" ValueChanged="OnFieldChanged" Variant="Variant.Outlined">
        @foreach (var field in FieldOptions)
        {
            <MudSelectItem Value="field" >
                @field.Name
            </MudSelectItem>
        }
    </MudSelect>
    @if (SelectedFieldOption?.Type != typeof(bool))
    {
        <MudSelect @bind-Value="FilterOperation.Operator" Label="Operator" Variant="Variant.Outlined">
            @foreach (var filterOperator in Enum.GetValues<MapMaven.Core.Models.DynamicPlaylists.FilterOperator>())
            {
                <MudSelectItem Value="filterOperator">
                    @filterOperator.ToString()
                </MudSelectItem>
            }
        </MudSelect>
    }
    @switch (SelectedFieldOption?.Type)
    {
        case Type type when type == typeof(string):
            <MudTextField @bind-Value="FilterOperation.Value" Label="Value" Variant="Variant.Outlined" />
            break;
        case Type type when Numeric.Is(type):
            <MudNumericField @bind-Value="FilterOperation.Value" Label="Value" Variant="Variant.Outlined" />
            break;
        case Type type when type == typeof(bool):
            <MudSwitch T="bool" Checked="@(bool.TryParse(FilterOperation.Value, out var boolValue) ? boolValue : false)" CheckedChanged="BooleanValueChanged" Color="Color.Primary" />
            break;
        case Type type when type == typeof(DateTimeOffset):
            <MudDatePicker @bind-Value="FilterOperation.Value" Label="Value" Variant="Variant.Outlined" />
            break;
        default:
            <MudTextField @bind-Value="FilterOperation.Value" Label="Value" Variant="Variant.Outlined" />
            break;
    }
    <MudIconButton Icon="@Icons.Material.Filled.RemoveCircle" OnClick="OnRemove" />
</div>
