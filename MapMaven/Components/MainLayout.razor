@using System.Reactive.Threading.Tasks
@using BeatSaberTools.Core.Services

@inherits LayoutComponentBase

@inject IDialogService DialogService

<MudThemeProvider Theme="BSToolsTheme.Theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    @if (InitialSetupDone)
    {
        <SideNav></SideNav>
        <MudMainContent Class="pa-0">
            @Body
        </MudMainContent>
    }
</MudLayout>

@code {
    [Inject]
    protected ApplicationSettingService ApplicationSettingService { get; set; }

    [Inject]
    protected BeatSaberDataService BeatSaberDataService { get; set; }

    [Inject]
    protected MapService MapService { get; set; }

    [Inject]
    protected ScoreSaberService ScoreSaberService { get; set; }

    [Inject]
    protected BeatSaverFileService BeatSaberToolFileService { get; set; }

    protected bool InitialSetupDone { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ApplicationSettingService.LoadAsync();

        BeatSaberToolFileService.BeatSaberInstallLocationObservable.Subscribe(location =>
        {
            InitialSetupDone = location != null;

            StateHasChanged();

            if (InitialSetupDone)
            {
                Task.Run(BeatSaberDataService.LoadAllMapInfo);
                Task.Run(ScoreSaberService.LoadRankedMaps);
                Task.Run(BeatSaberDataService.LoadAllPlaylists);
                Task.Run(MapService.LoadHiddenMaps);
            }
        });
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (BeatSaberToolFileService.BeatSaberInstallLocation == null)
        {
            DialogService.Show<Settings>(
                title: null,
                parameters: new()
                {
                    { nameof(Settings.InitialSetup), true }
                },
                options: new()
                {
                    DisableBackdropClick = true
                }
            );
        }
    }
}