@using System.Text.Json
@using MapMaven.Core.Utilities.Scoresaber

<SelectColumn T="Map" />
<TemplateColumn T="Map" Sortable="false">
    <CellTemplate>
        @(FilteredMaps.TakeWhile(m => m != context.Item).Count() + 1)
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Class="pa-1" Style="width: 50px" Sortable="false">
    <CellTemplate>
        <MapCover Map="context.Item" Size="50"></MapCover>
    </CellTemplate>
</TemplateColumn>
<PropertyColumn T="Map" TProperty="string" Property="m => m.Name" Sortable="false"></PropertyColumn>
<PropertyColumn T="Map" TProperty="string" Property="m => m.SongAuthorName" Title="Song Author" Sortable="false"></PropertyColumn>
<PropertyColumn T="Map" TProperty="string" Property="m => m.MapAuthorName" Title="Map Author" Sortable="false"></PropertyColumn>
<TemplateColumn T="Map" Sortable="false" Title="Duration" Style="width: 130px">
    <CellTemplate>@context.Item.SongDuration.ToString("mm':'ss")</CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false" Title="Difficulty">
    <CellTemplate>
        @{
            var difficulty = context.Item.Difficulty?.Difficulty;
            var chipStyle = $"border: 1px solid {DifficultyDisplayUtils.GetColor(difficulty)}";
        }
        <MudChip Size="Size.Small" Variant="Variant.Outlined" Style="@chipStyle">@difficulty</MudChip>
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false">
    <HeaderTemplate>
        <MudIcon Icon="@Icons.Filled.Star"></MudIcon>
    </HeaderTemplate>
    <CellTemplate>
        <MudChip Size="Size.Small">
            @context.Item.Difficulty?.Stars.ToString("0.##") <MudIcon Icon="@Icons.Filled.Star" Size="Size.Small"></MudIcon>
        </MudChip>
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false">
    <CellTemplate>
        @if (context.Item.HighestPlayerScore != null)
        {
            <MudChip Size="Size.Small">@context.Item.HighestPlayerScore.Score.Accuracy.ToString("#0.##") %</MudChip>
            <MudChip Size="Size.Small">@context.Item.HighestPlayerScore.Score.Pp.ToString("#0.##") pp</MudChip>
        }
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false" Style="width: 130px" HeaderStyle="justify-content: flex-start">
    <HeaderTemplate>
        <MudIcon Icon="@Icons.Filled.KeyboardDoubleArrowUp"></MudIcon>pp
    </HeaderTemplate>
    <CellTemplate>
        @if (context.Item.ScoreEstimates != null)
        {
            @foreach (var scoreEstimate in context.Item.ScoreEstimates)
            {
                <MudChip Color="Color.Primary" Size="Size.Small">
                    @scoreEstimate.Accuracy.ToString("#0.##") % |
                    +@scoreEstimate.PPIncrease.ToString("#0.##") pp
                </MudChip>
            }
        }
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false">
    <CellTemplate>
        @if (!MapIsInstalled(context.Item))
        {
            <MudTooltip Text="Download">
                <MudIconButton
                    Icon="@Icons.Filled.Download"
                    Style="pointer-events: all;"
                    OnClick="() => DownloadMap(context.Item)">
                </MudIconButton>
            </MudTooltip>
        }
    </CellTemplate>
</TemplateColumn>
<TemplateColumn T="Map" Sortable="false">
    <CellTemplate>
        <MudTooltip Text="@(context.Item.Hidden ? "Un-hide map" : "Hide map")">
            <MudIconButton
                Icon="@(context.Item.Hidden ? Icons.Filled.RemoveRedEye : Icons.Filled.DisabledVisible)"
                Style="pointer-events: all;"
                OnClick="() => HideUnhideMap(context.Item)">
            </MudIconButton>
        </MudTooltip>
    </CellTemplate>
</TemplateColumn>