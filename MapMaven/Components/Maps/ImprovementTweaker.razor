@inherits ReactiveComponent

<MudDrawer Open="true"
           Fixed="false"
           Elevation="0"
           Class="pa-4"
           Style="position: relative !important; background-color: var(--mud-palette-surface);">
    <div class="d-flex flex-column justify-space-between full-height">
        <div>
            <MudSelect T="string" Value="PlayedFilter" Label="Played / Not played" Variant="Variant.Outlined" ValueChanged="value => OnPlayedFilterChanged(value)">
                <MudSelectItem Value="@("Both")" />
                <MudSelectItem Value="@("Played")" />
                <MudSelectItem Value="@("Not played")" />
            </MudSelect>

            <MudSelect T="string" Value="HiddenFilter" Label="Hidden / Not hidden" Class="mt-5" Variant="Variant.Outlined" ValueChanged="value => OnHiddenFilterChanged(value)">
                <MudSelectItem Value="@("Both")" />
                <MudSelectItem Value="@("Hidden")" />
                <MudSelectItem Value="@("Not hidden")" />
            </MudSelect>

            <MudNumericField T="double"
                Value="MinimumPredictedAccuracy"
                Label="Min predicted accuracy"
                DebounceInterval="300"
                Class="mt-5"
                Variant="Variant.Outlined"
                Min="0"
                Max="100"
                ValueChanged="OnPredictedAccuracyFilterChanged" />

            <MudExpansionPanels Class="my-3">
                <MudExpansionPanel Text="Difficulty settings" Style="background-color: var(--mud-palette-drawer-background);">
                    <DifficultyModifierSlider></DifficultyModifierSlider>
                    <MudAlert Severity="Severity.Normal" Square="true" Dense="true" NoIcon="true" Style="margin: 16px -24px -16px -24px">
                        <div class="d-flex flex-row align-center gap-3">
                            <MudIcon Icon="@Icons.Outlined.Info" Size="Size.Small"></MudIcon>
                            <MudText Typo="Typo.caption" Style="font-size: 11px">
                                Increase or decrease the difficulty of recommended maps. This difficulty is applied globally and stays saved.
                            </MudText>
                        </div>
                    </MudAlert>
                </MudExpansionPanel>
            </MudExpansionPanels>

            <MudExpansionPanels Class="mt-3">
                <MudExpansionPanel Text="Select..." Style="background-color: var(--mud-palette-drawer-background);">
                    <MudNumericField @bind-Value="MapSelectNumber" Label="Number of maps" Class="my-3" Min="1" />
                    <MudNumericField @bind-Value="MapSelectStartFromNumber" Label="Starting from number" Class="my-3" Min="1" />
                    <MudButton Variant="Variant.Outlined"
                               Class="full-width my-3"
                               OnClick="ApplyMapSelection">
                        Apply
                    </MudButton>
                </MudExpansionPanel>
            </MudExpansionPanels>
        </div>
        <div>
            @if (SelectedMaps.Any())
            {
                <MudButton Variant="Variant.Text"
                           StartIcon="@Icons.Filled.Clear"
                           Class="full-width mx-0 mt-3 mb-0"
                           OnClick="ClearSelection">
                    Clear selection
                </MudButton>
                <MudChip Variant="Variant.Outlined" Class="full-width mx-0 mt-3">
                    @SelectedMaps.Count() maps (+@SelectedMaps.Sum(m => m.ScoreEstimates.FirstOrDefault()?.PPIncrease ?? 0).ToString("#0.##") pp)
                </MudChip>
                <MudMenu Label="Actions" Class="full-width mx-0 my-3" FullWidth="true" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Menu">
                    <MudMenuItem Icon="@Icons.Material.Filled.DisabledVisible" OnClick="() => HideUnhideSelectedMaps(true)">Hide all</MudMenuItem>
                    <MudMenuItem Icon="@Icons.Material.Filled.RemoveRedEye" OnClick="() => HideUnhideSelectedMaps(false)">Un-hide all</MudMenuItem>
                </MudMenu>
            }
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       StartIcon="@Icons.Filled.PlaylistAdd"
                       Class="full-width"
                       Disabled="!SelectedMaps.Any() || CreatingPlaylist"
                       OnClick="CreatePlaylistFromSelectedMaps">
                Create playlist
            </MudButton>
        </div>
    </div>
</MudDrawer>