@inherits ReactiveComponent

@{
    var specificPlaylistContainsMap = PlaylistsContainingMapHash.Contains(SpecificPlaylist);
    var showIcon = SpecificPlaylist is null && PlaylistsContainingMapHash.Any() || specificPlaylistContainsMap;

    if (showIcon)
    {
        string tooltip;

        if (specificPlaylistContainsMap)
        {
            tooltip = "Playlist already contains this map";
        }
        else
        {
            tooltip = $"In playlists:  {string.Join(", ", PlaylistsContainingMapHash.Select(p => p.Title))}";
        }

        <MudTooltip Text="@tooltip" RootClass="d-flex">
            <MudIcon Icon="@Icons.Material.Filled.PlaylistAddCheckCircle" Style="opacity: 0.4" />
        </MudTooltip>
    }
}

@code {
    [Inject]
    IPlaylistService PlaylistService { get; set; }

    [Parameter]
    public string MapHash { get; set; }

    [Parameter]
    public Playlist? SpecificPlaylist { get; set; }

    Playlist[] PlaylistsContainingMapHash = [];

    protected override void OnInitialized()
    {
        SubscribeAndBind(PlaylistService.MapsInPlaylistsByHash, mapsInPlaylistsByHash =>
        {
            if (MapHash is null || !mapsInPlaylistsByHash.ContainsKey(MapHash))
            {
                PlaylistsContainingMapHash = Array.Empty<Playlist>();
                return;
            }

            PlaylistsContainingMapHash = mapsInPlaylistsByHash[MapHash];
        });
    }
}
