@using Markdig
@using Markdig.Extensions.MediaLinks
@using System.Text.RegularExpressions

<MudDialog>
    <DialogContent>
        <div class="default-html">
            @if (ReleaseNotesHtml is not null)
            {
                @((MarkupString)ReleaseNotesHtml)
            }
        </div>
    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

@code {
    [Inject]
    UpdateService UpdateService { get; set; }

    ReleaseInfo ReleaseInfo { get; set; }

    string ReleaseNotesHtml { get; set; }

    // Regex to match Github media links
    Regex GithubMediaRegex = new Regex(@"\(?https:\/\/github\.com\/DennisvHest\/MapMaven\/assets\S*\)?");

    protected override async Task OnInitializedAsync()
    {
        ReleaseInfo = await UpdateService.GetLatestReleaseInfo();

        string releaseNotes = ReleaseInfo.Body;

        // Convert Github media links to markdown video links
        releaseNotes = GithubMediaRegex.Replace(releaseNotes, match =>
        {
            if (match.Value.StartsWith('(') || match.Value.EndsWith(')'))
                return match.Value; // Ignore markdown image links

            return $"<iframe src='{match.Value}' allowfullscreen='true' style='aspect-ratio: 16 / 9'></iframe>";
        });

        var pipeline = new MarkdownPipelineBuilder()
            .UseAutoLinks()
            .Build();

        ReleaseNotesHtml = Markdown.ToHtml(releaseNotes, pipeline);
    }
}
