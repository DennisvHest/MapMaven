@using MapMaven.Core.Models;
@inherits ReactiveComponent

<MudDialog Style="width: 600px">
    <TitleContent>
        <div class="d-flex align-center">
            <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-2"></MudIcon>
            <h3>@(InitialSetup ? "Setup" : "Settings")</h3>
            @if(!InitialSetup)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="Close" Style="margin-left: auto"></MudIconButton>
            }
        </div>
    </TitleContent>
    <DialogContent>
        <MudTextField
            @bind-Value="BeatSaberInstallLocation"
            DebounceInterval="300"
            OnDebounceIntervalElapsed="AutoFillPlayerId"
            Variant="Variant.Outlined"
            Label="Beat Saber install location"
            Class="mb-4"
            Adornment="Adornment.End"
            AdornmentIcon="@Icons.Filled.DriveFileMove"
            OnAdornmentClick="PickFolder">
        </MudTextField>

        <div class="d-flex align-center mb-4">
            <img src="@LeaderboardUtility.GetLogoPath(LeaderboardProvider.ScoreSaber)" style="width: 24px;" class="mr-3" />
            <MudTextField @bind-Value="ScoreSaberPlayerId"
                          DebounceInterval="300"
                          Clearable="true"
                          Variant="Variant.Outlined"
                          Label="ScoreSaber player ID / URL (optional)">
            </MudTextField>
        </div>

        <div class="d-flex align-center mb-4">
            <img src="@LeaderboardUtility.GetLogoPath(LeaderboardProvider.BeatLeader)" style="width: 24px;" class="mr-3" />
            <MudTextField @bind-Value="BeatLeaderPlayerId"
                          DebounceInterval="300"
                          Clearable="true"
                          Variant="Variant.Outlined"
                          Label="BeatLeader player ID / URL (optional)">
            </MudTextField>
        </div>

        @{
            var availableLeaderboards = new List<LeaderboardProvider?>();

            if (!string.IsNullOrEmpty(ScoreSaberPlayerId))
                availableLeaderboards.Add(LeaderboardProvider.ScoreSaber);

            if (!string.IsNullOrEmpty(BeatLeaderPlayerId))
                availableLeaderboards.Add(LeaderboardProvider.BeatLeader);

            if (!availableLeaderboards.Any())
            {
                ActiveLeaderboardProvider = null;
            }
            else if (availableLeaderboards.Count == 1)
            {
                ActiveLeaderboardProvider = availableLeaderboards.First();
            }
            else if (availableLeaderboards.Count > 1 && ActiveLeaderboardProvider is null)
            {
                ActiveLeaderboardProvider = availableLeaderboards.First();
            }
        }

        @if (availableLeaderboards.Any())
        {
            <div class="d-flex flex-row align-center">
                <b class="mud-list-subheader pa-0 mr-1">Active leaderboard</b>
                <div class="ml-auto">
                    <LeaderboardSelector AvailableLeaderboardProviders="availableLeaderboards"
                                         @bind-SelectedLeaderboardProvider="ActiveLeaderboardProvider">
                    </LeaderboardSelector>
                </div>
            </div>
        }
    </DialogContent>
    <DialogActions>
        <div class="d-flex flex-column full-width">
            <div class="d-flex justify-space-between full-width">
                <MudButton Variant="Variant.Filled"
                           Size="Size.Small"
                           StartIcon="@Icons.Material.Filled.Cached"
                           Class="ma-3 align-self-center"
                           Style="@(InitialSetup ? "visibility: hidden;" : string.Empty)"
                           OnClick="ResetApplicationAsync">
                    Reset Map Maven
                </MudButton>

                <MudButton Color="Color.Primary"
                           Variant="Variant.Filled"
                           Class="ma-3"
                           Disabled="string.IsNullOrEmpty(BeatSaberInstallLocation)"
                           OnClick="SaveSettings">
                    @(InitialSetup ? "Start" : "Save")
                </MudButton>
            </div>
            @if (!InitialSetup && UpdateService.IsInstalled)
            {
                <div class="d-flex align-center full-width py-2" style="border-top: 1px solid grey">
                    <MudChip
                        Variant="Variant.Outlined"
                        Size="Size.Small"
                        Disabled="UpdateIsAvailable"
                        OnClick="() => OpenReleaseNotes(false)">
                        Version: @UpdateService.CurrentVersion
                    </MudChip>

                    @if (UpdateIsAvailable)
                    {
                        <MudChip
                            Variant="Variant.Outlined"
                            Size="Size.Small"
                            Color="Color.Info"
                            Icon="@Icons.Material.Filled.Update"
                            OnClick="() => OpenReleaseNotes(true)">
                            Update available
                        </MudChip>
                    }
                </div>
            }
        </div>
    </DialogActions>
</MudDialog>