@inherits ReactiveComponent

<MudDrawer Open="true"
           Fixed="false"
           Elevation="0"
           Class="pa-4"
           Style="position: relative !important; background-color: var(--mud-palette-surface);">
    <div class="d-flex flex-column justify-space-between full-height">
        <div>
            <MudSelect T="string" Value="PlayedFilter" Label="Played / Not played" Variant="Variant.Outlined" ValueChanged="value => OnPlayedFilterChanged(value)">
                <MudSelectItem Value="@("Both")" />
                <MudSelectItem Value="@("Not played")" />
                <MudSelectItem Value="@("Played")" />
            </MudSelect>
        </div>
        <div>
            @if (SelectedMaps.Any())
            {
                <MudButton Variant="Variant.Filled"
                           StartIcon="@Icons.Filled.Clear"
                           Class="full-width mx-0 mt-3 mb-0"
                           OnClick="ClearSelection">
                    Clear selection
                </MudButton>
                <MudChip Variant="Variant.Outlined" Class="full-width mx-0 my-3">
                    @SelectedMaps.Count() maps (+@SelectedMaps.Sum(m => m.ScoreEstimate.FirstOrDefault()?.PPIncrease ?? 0).ToString("#0.##") pp)
                </MudChip>
            }
            <MudButton Color="Color.Primary"
                       Variant="Variant.Filled"
                       StartIcon="@Icons.Filled.PlaylistAdd"
                       Class="full-width"
                       Disabled="!SelectedMaps.Any() || CreatingPlaylist"
                       OnClick="CreatePlaylistFromSelectedMaps">
                Create playlist
            </MudButton>
        </div>
    </div>
</MudDrawer>